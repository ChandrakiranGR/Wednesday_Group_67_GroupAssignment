/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.Admin;

import java.awt.CardLayout;
import java.awt.Component;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import model.Business.Business;
import model.CustomerManagement.CustomerDirectory;
import model.CustomerManagement.CustomerProfile;
import model.OrderManagement.CurrentOrder;
import model.OrderManagement.OrderItem;
import model.ProductManagement.Product;
import model.Supplier.Supplier;
import model.Supplier.SupplierDirectory;

/**
 *
 * @author vish
 */
public class AdminWorkArea extends javax.swing.JPanel {
    JPanel mainWorkArea;
    Business business;
    /**
     * Creates new form NewJPanel
     */
    public AdminWorkArea(JPanel mainWorkArea, Business b) {
        initComponents();
        this.mainWorkArea = mainWorkArea;
        this.business = b;
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        controlPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btnPerformanceReport = new javax.swing.JButton();
        btnManageSuppliers = new javax.swing.JButton();
        btnLogOut = new javax.swing.JButton();
        workArea = new javax.swing.JPanel();

        jSplitPane1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel1.setText("Admin WorkArea");

        btnPerformanceReport.setText("Performace Report");
        btnPerformanceReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPerformanceReportActionPerformed(evt);
            }
        });

        btnManageSuppliers.setText("Manage Suppliers");
        btnManageSuppliers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnManageSuppliersActionPerformed(evt);
            }
        });

        btnLogOut.setText("Log Out");
        btnLogOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogOutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout controlPanelLayout = new javax.swing.GroupLayout(controlPanel);
        controlPanel.setLayout(controlPanelLayout);
        controlPanelLayout.setHorizontalGroup(
            controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(controlPanelLayout.createSequentialGroup()
                .addContainerGap(279, Short.MAX_VALUE)
                .addComponent(btnPerformanceReport)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnManageSuppliers)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnLogOut)
                .addGap(16, 16, 16))
            .addGroup(controlPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        controlPanelLayout.setVerticalGroup(
            controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(controlPanelLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPerformanceReport)
                    .addComponent(btnManageSuppliers)
                    .addComponent(btnLogOut))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jSplitPane1.setTopComponent(controlPanel);

        workArea.setLayout(new java.awt.CardLayout());
        jSplitPane1.setRightComponent(workArea);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 366, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnPerformanceReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPerformanceReportActionPerformed
        // TODO add your handling code here:
//        SupplierDirectory sd = business.getSupplierDirectory();
//        CustomerDirectory customerdirectory = business.getCustomerDirectory();
//   
//        for (int j=0; j< sd.getSuplierList().size();j++){
//            Supplier s = sd.getSuplierList().get(j);
//            
//            for(int k=0; k<s.getProductcatalog().getProductList().size();k++){
//                Product p = s.getProductcatalog().getProductList().get(k);
//                System.out.println("=============");
//                System.out.println("Product Name"+ p.getName());
//                System.out.println("Latest Target Price"  + p.getTargetPrice() );
//                System.out.println("" + p.getCeilingPrice());
//                System.out.println("" + p.getFloorPrice());
//                System.out.println("" + p.getNumberOfProductSalesAboveTarget());
//                System.out.println("" + p.getNumberOfProductSalesBelowTarget());
//                System.out.println("" + p.getOrderPricePerformance());
//                System.out.println("=============");
//                for(Integer oldtp:p.getProductRep().keySet()){
//                    System.out.println(""+oldtp);                    
//                    System.out.println(""+p.getProductRep().get(oldtp).getAboveTargetNo());
//                    System.out.println(""+p.getProductRep().get(oldtp).getBelowTargetNo());
//                    System.out.println(""+p.getProductRep().get(oldtp).getMargin());
//                }
//               }
               
        
//                }
            try {
            FileWriter myWriter = new FileWriter("D:\\INFO-5100-AED\\"+ "Generate_Final_Product_Performance_Report" +".txt");
            SupplierDirectory sd = business.getSupplierDirectory();
            CustomerDirectory customerdirectory = business.getCustomerDirectory();
   
            for (int j=0; j< sd.getSuplierList().size();j++){
                Supplier s = sd.getSuplierList().get(j);

                for(int k=0; k<s.getProductcatalog().getProductList().size();k++){
                    Product p = s.getProductcatalog().getProductList().get(k);
                    System.out.println("===================================================");
                    myWriter.write("===================================================" + "\n"); 
                    System.out.println("Product Name: "+ p.getName());
                    myWriter.write("Product Name: "+ p.getName() + "\n"); 
                    System.out.println("Current Target Price: "  + p.getTargetPrice() );
                    myWriter.write("Current Target Price: "  + p.getTargetPrice() + "\n");
                    System.out.println("Ceiling Price: " + p.getCeilingPrice());
                    myWriter.write("Ceiling Price: " + p.getCeilingPrice() + "\n");
                    System.out.println("Floor Price: " + p.getFloorPrice());
                    myWriter.write("Floor Price: " + p.getFloorPrice() + "\n");
                    System.out.println("No. of Orders Sold above Target Price: " + p.getNumberOfProductSalesAboveTarget());
                    myWriter.write("No. of Orders Sold above Target Price: " + p.getNumberOfProductSalesAboveTarget() + "\n");
                    System.out.println("No. of Orders Sold below Target Price: " + p.getNumberOfProductSalesBelowTarget());
                    myWriter.write("No. of Orders Sold below Target Price: " + p.getNumberOfProductSalesBelowTarget() + "\n");
                    
                    System.out.println("Current Product Price Performance: " + p.getOrderPricePerformance());
                    myWriter.write("Current Product Price Performance: " + p.getOrderPricePerformance() + "\n");
                    System.out.println("===================================================");
                    myWriter.write("===================================================" + "\n");
                    System.out.println("==================== Product Performance History ===============================");
                    myWriter.write("==================== Product Performance History ===============================" + "\n");
                    for(Integer oldtp:p.getProductRep().keySet()){
                        System.out.println("Previous Target Price: " + oldtp); 
                        myWriter.write("Previous Target Price: " + oldtp + "\n");
                        System.out.println("No. of Orders Sold Above Target Price: "+p.getProductRep().get(oldtp).getAboveTargetNo());
                        myWriter.write("No. of Orders Sold Above Target Price: "+p.getProductRep().get(oldtp).getAboveTargetNo() + "\n");
                        System.out.println("No. of Orders Sold Below Target Price: "+p.getProductRep().get(oldtp).getBelowTargetNo());
                        myWriter.write("No. of Orders Sold Below Target Price: "+p.getProductRep().get(oldtp).getBelowTargetNo() + "\n");
                        System.out.println("Previous Product Price Performance: "+p.getProductRep().get(oldtp).getMargin());
                        myWriter.write("Previous Product Price Performance: "+p.getProductRep().get(oldtp).getMargin() + "\n");
                        System.out.println("===================================================");
                        myWriter.write("===================================================" + "\n");
                    }
                    myWriter.write("++++++++++++++++++++++++++++++++++++++++++++++++++++++" + "\n");
                  }
                }      
                myWriter.close();
                JOptionPane.showMessageDialog(this, "Report has been generated.");
  
        } catch (IOException e) {
            e.printStackTrace();
        }
        
        
    }//GEN-LAST:event_btnPerformanceReportActionPerformed

    private void btnManageSuppliersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnManageSuppliersActionPerformed
        // TODO add your handling code here:
        ManageSuppliersJPanel panel = new ManageSuppliersJPanel(workArea, business) ;
        workArea.add ("ManageSupplierAdministrative", panel);
        CardLayout layout = (CardLayout) workArea.getLayout ();
        layout. next (workArea) ;

    }//GEN-LAST:event_btnManageSuppliersActionPerformed

    private void btnLogOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogOutActionPerformed
        // TODO add your handling code here:
        mainWorkArea.remove(this);
        Component[] componentArray = mainWorkArea.getComponents();
        Component component = componentArray[componentArray.length - 1];
        // LoginScreen loginPanel= (LoginScreen) component;
        //   loginPanel.populateSupplierCombo();
        CardLayout layout = (CardLayout)mainWorkArea.getLayout();
        layout.next(mainWorkArea);

    }//GEN-LAST:event_btnLogOutActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLogOut;
    private javax.swing.JButton btnManageSuppliers;
    private javax.swing.JButton btnPerformanceReport;
    private javax.swing.JPanel controlPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JPanel workArea;
    // End of variables declaration//GEN-END:variables
}
